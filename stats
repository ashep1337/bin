#!/bin/bash


# This script fetches temperature data from the system and displays it in a simple to read format and then provides a system notifcation through notify-send. You will need to download "libnotify-bin" in order to use notify-send.

# additionally this is configured with a systemd service file and a python script. The systemd service/timer runs "tempcheck" every 2 minutes into a file so plottemp can make a graph of the info.

# This is keybound to ctrl + t on my system so it pops up a notifcation when the keybind is pressed with basic temp/uptime info about the system.


uptime=$(uptime -p | sed -E 's/^up //; s/day/d/g; s/hours/hr/g; s/minutes/min/g; s/([0-9]+) /\1/g')
cputemp=$(sensors | awk -F ':' '{print $2}' | awk 'NR==3' | cut -d'C' -f1 | cut -d'+' -f2 | xargs)
gputemp=$(sensors | awk -F ':' '{print $2}' | awk 'NR==19' | cut -d'C' -f1 | cut -d'+' -f2 | xargs)
nvmetemp=$(sensors | awk -F ':' '{print $2}' | awk 'NR==45' | cut -d'C' -f1 | cut -d'+' -f2 | xargs)
ramused=$(free -h | awk '{print $3}' | awk 'NR==2' | cut -d"G" -f1) 
ramtotal=$(free -h | awk '{print $2}' | awk 'NR==2')

# Get uptime

printf "Uptime - $uptime\n"

# Get ram usage

printf "Ram - "$ramused"/"$ramtotal" \n" 

# Get temps

printf "CPU Temp - $cputemp \n"
printf "GPU Temp - $gputemp \n"
printf "NVME Temp - $nvmetemp \n "

notify-send "Stats" " 
====================================\n
    - Uptime - $uptime \n
    - CPU Temp - $cputemp \n
    - GPU Temp - $gputemp \n
    - NVME Temp - $nvmetemp \n"
